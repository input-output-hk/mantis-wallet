version: 2.1

executors:
  nodejs:
    docker:
      - image: circleci/node:12.13.1-buster
  scala:
    docker:
      - image: atixlabs/midnight:circleci-v7

jobs:
  submodules:
    executor: nodejs
    working_directory: ~/project/luna-wallet
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - persist_to_workspace:
          root: ~/project
          paths:
            - luna-wallet

  # TODO: don't build midnight from scratch
  midnight-dist:
    environment:
      - SBT: "sbt -v -mem 1024 -J-Xmx2g"
      - LC_ALL: "en_US.UTF-8"
      - LANG: "en_US.UTF-8"
      - LANGUAGE: "en_US.UTF-8"
    executor: scala
    working_directory: ~/project/luna-wallet/midnight
    steps:
      - attach_workspace:
          at: ~/project
      - restore_cache:
          key: midnight-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-v1
      - run: $SBT dist
      - save_cache:
          key: midnight-{{ checksum "build.sbt" }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-v1
          paths:
            - ~/.sbt
            - ~/.ivy2/cache
            - ~/.m2
      - persist_to_workspace:
          root: ~/project
          paths:
            - luna-wallet/midnight/node/target
            - luna-wallet/midnight/wallet-backend/target

  node_modules:
    executor: nodejs
    working_directory: ~/project/luna-wallet
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific yarn.lock checksum.
            - yarn-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
            # Find the most recent cache regardless of yarn.lock checksum.
            - yarn-{{ .Environment.CACHE_VERSION }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: yarn-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - luna-wallet/node_modules
  test:
    executor: nodejs
    working_directory: ~/project/luna-wallet
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Run lint
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test --ci --no-cache

  build:
    executor: nodejs
    working_directory: ~/project/luna-wallet
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Build
          command: yarn build-all
      - persist_to_workspace:
          root: ~/project
          paths:
            - luna-wallet/build

  package:
    executor: nodejs
    working_directory: ~/project/luna-wallet
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Prepare midnight-dist
          command: |
            mkdir ~/project/midnight-dist
            cp midnight/node/target/universal/midnight-*.zip ~/project/midnight-dist/node.zip
            cp midnight/wallet-backend/target/universal/midnight-*.zip ~/project/midnight-dist/wallet.zip
            cd ~/project/midnight-dist
            unzip node.zip
            unzip wallet.zip
            rm node.zip wallet.zip
            mv midnight-node-* midnight-node
            mv midnight-wallet-* midnight-wallet
      - run:
          name: Package All the Things
          command: |
            sudo dpkg --add-architecture i386
            sudo apt update
            sudo apt install wine32 wine64 rpm
            yarn package-win
            yarn package
            npx electron-builder --prepackaged dist/Luna-linux-x64 --linux snap AppImage deb rpm
            mkdir /tmp/artifacts
            mv dist/*.{exe,snap,AppImage,deb,rpm} /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
          destination: installers

workflows:
  version: 2
  workflow:
    jobs:
      - submodules
      - node_modules
      - midnight-dist:
          requires:
            - submodules
      - test:
          requires:
            - node_modules
      - build:
          requires:
            - submodules
            - node_modules
      - package:
          requires:
            - build
            - submodules
            - midnight-dist
